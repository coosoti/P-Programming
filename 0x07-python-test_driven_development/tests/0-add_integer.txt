How to use 0-add_integer.py module
=====================================

This module contains a function that adds two integers. The values passed
to the functions must be integers or floats. The floats should be casted \
into integers before computation. The errors should be TypeError
on failure to pass integers or floats

Importing the functin from the module:
	  >>> add_integer = __import__("0-add_integer").add_integer

Checking Module Docstring:
	 >>> module_doc = __import__("0-add_integer").__doc__
	 >>> len(module_doc) > 1
	 True

Checking for function Docstring:
	 >>> func_doc = __import__("0-add_integer").add_integer.__doc__
	 >>> len(func_doc) > 1
	 True

Checking for addition of positive integer:
	 >>> add_integer(1, 3)
	 4

Checking for addition of negative and positive numbers:
	 >>> add_integer(-3, 1)
	 -2

Checking float with int:
	 >>> add_integer(2.1, 4)
	 6

Checking int with float:
	 >>> add_integer(5, 7.8)
	 12

Checking both float:
	 >>> add_integer(2.45, 3.1)
	 5

Checking for passed NaN:
	 >>> add_integer(1, float('nan'))
	 Traceback (most recent call last):
	 ...
	 ValueError: cannot convert float NaN to integer

Checking for passed inf:
	 >>> add_integer(1, float('inf'))
	 Traceback (most recent call last):
	 ...
	 OverflowError: cannot convert float infinity to integer

Checking super long int:
	 >>> add_integer(999999999999999999999999999999, 1)
	 1000000000000000000000000000000

Checking non-number with number:
	 >>> add_integer([1], 2)
	 Traceback (most recent call last):
	 ...
	 TypeError: a must be an integer

Checking number with non-number:
	 >>> add_integer(3, "2")
	 Traceback (most recent call last):
	 ...
	 TypeError: b must be an integer

Checking non-number with non-number:
	 >>> add_integer((2,), {"key": "value"})
         Traceback (most recent call last):
         ...
         TypeError: a must be an integer

Checking no args:
	 >>> add_integer()
	 Traceback (most recent call last):
	 ...
	 TypeError: add_integer() missing 1 required positional argument: 'a'

Checking more than 2 args:
	 >>> add_integer(1, 2, 3)
         Traceback (most recent call last):
         ...
	 TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
